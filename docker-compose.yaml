version: "3.6"

services:
  postgres_multiple_databases:
    container_name: postgres_multiple_databases
    image: postgres:15.4
    ports:
      - "5435:5432"
    restart: always
    volumes:
#      - ./tsl_crl_downloader/SQL/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - databases_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready --dbname=crldatabase --username=postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 10
    networks:
      - xml_manager_network

  xml_manager:
    container_name: xml_manager_app
    build: ./xml_manager
    ports:
      - "9000:8000"
    restart: always
    volumes:
      - tsl_files:/code/tsl_crldownloader
      - static:/code/static
      - media:/code/media
#    depends_on:
#      postgres_multiple_databases:
#        condition: service_healthy
    networks:
      - xml_manager_network

#  tsl_crl_downloader:
#    container_name: tsl_crl_downloader
#    build: ./tsl_crl_downloader
##    image: registry.enigma.com.pl/pemheart/tsl-crl-downloader:2
#    restart: always
#    volumes:
#      - ${CONFIGURATION_FILE}:/workdir/app/crl_downloader.config
#      - ${LOG_DIRECTORY}:/workdir/app/logs
#      - tsl_files:/workdir/app/tsl
#      - ${CERTS_DIRECTORY}:/workdir/app/certs
#      - ${GOOGLE_CLOUD_KEY}:/workdir/app/key/cencert-2974e1096f04_key.json
#    environment:
#      - CRL_DOWNLOADER_PERIOD_MINUTES=${CRL_PERIOD}
#      - TSL_DOWNLOADER_EXEC_TIME=${TSL_EXEC_TIME}
#      - TSL_DOWNLOADER_DIR=${TSL_DIR}
#      - GOOGLE_APPLICATION_CREDENTIALS=${TIMEZONE}
#      - TZ=${TIMEZONE}
#    depends_on:
#      postgres_multiple_databases:
#        condition: service_healthy
#    networks:
#      - xml_manager_network

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    restart: always
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
#    depends_on:
#      postgres_multiple_databases:
#        condition: service_healthy
    networks:
      - xml_manager_network

#  nginx:
#    container_name: xml_manager_nginx
#    build: ./nginx
#    ports:
#      - "8080:8080"
#    restart: always
#    volumes:
#      - static:/static
#      - media:/media
#    depends_on:
#      - xml_manager
#    networks:
#      - xml_manager_network

networks:
  xml_manager_network:
    name: xml_manager_network
    driver: bridge

volumes:
  static:
    name: static_volume
  media:
    name: media_volume
  tsl_files:
    name: tsl_files_volume
  databases_data:
    name: databases_data
  pgadmin_data:
    name: pgadmin_data
